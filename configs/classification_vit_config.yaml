# Model Configuration for ViT Classification
model:
  model_name: "google/vit-base-patch16-224"  # ViT base model
  task_type: "classification"
  num_classes: 1000  # ImageNet has 1000 classes
  pretrained: true
  learning_rate: 1e-4
  weight_decay: 0.01
  scheduler: "cosine"
  epochs: 30
  image_size: 224  # ViT default image size
  class_names: null  # Will be loaded from dataset
  model_kwargs: {}  # Additional model arguments

# Data Configuration
data:
  # Separate paths for train/val/test splits
  train_data_path: "/Volumes/users/aradhya_chouhan/imagenet_mini/data/train/"
  val_data_path: "/Volumes/users/aradhya_chouhan/imagenet_mini/data/val/"
  test_data_path: "/Volumes/users/aradhya_chouhan/imagenet_mini/data/test/"
  
  # Data loading parameters
  batch_size: 32  # ViT recommended batch size per GPU
  num_workers: 4
  model_name: "google/vit-base-patch16-224"  # Required for adapter initialization
  
  # Image processing
  image_size: 224  # [height, width]
  normalize_mean: [0.485, 0.456, 0.406]  # ImageNet normalization
  normalize_std: [0.229, 0.224, 0.225]
  
  # Data augmentation
  horizontal_flip: true
  vertical_flip: false
  rotation: 30  # degrees
  brightness_contrast: 0.2
  hue_saturation: 0.2

# Training Configuration
training:
  # Basic training parameters
  max_epochs: 30  # ViT default training epochs
  
  # Learning rate and optimization
  learning_rate: 1e-4
  weight_decay: 0.01
  scheduler: "cosine"
  scheduler_params:
    T_max: 300
    eta_min: 1e-6
  
  # Early stopping
  early_stopping_patience: 10
  monitor_metric: "val_accuracy"  # Metric to monitor
  monitor_mode: "max"  # Maximize the monitored metric
  
  # Checkpointing
  checkpoint_dir: "/Volumes/users/aradhya_chouhan/imagenet_mini/data/checkpoints/classification_vit"
  save_top_k: 3
  
  # Logging
  log_every_n_steps: 50
  log_dir: "/Volumes/users/aradhya_chouhan/imagenet_mini/data/logs"
  
  # Distributed training
  distributed: false
  use_gpu: true
  resources_per_worker:
    CPU: 4
    GPU: 1

# MLflow Configuration
mlflow:
  experiment_name: "classification_training"
  run_name: "vit_base"
  log_model: true
  tags:
    framework: "pytorch_lightning"
    model: "vit"
    dataset: "imagenet"

# Output Configuration
output:
  results_dir: "/Volumes/users/aradhya_chouhan/imagenet_mini/data/results/classification_vit"
  save_predictions: true
  visualization:
    save_images: true
    confidence_threshold: 0.5
    max_predictions: 10 