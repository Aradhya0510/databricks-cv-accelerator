# Model Configuration
model:
  model_name: "microsoft/resnet-50"
  task_type: "classification"
  num_classes: 1000  # ImageNet classes
  pretrained: true
  
  # Classification-specific settings
  dropout: 0.2
  mixup_alpha: 0.2
  
  # Training hyperparameters
  learning_rate: 1e-4
  weight_decay: 1e-4
  scheduler: "cosine"
  scheduler_params:
    T_max: 100
    eta_min: 1e-6
  epochs: 100

# Data Configuration
data:
  # Dataset paths
  train_data_path: "/Volumes/<catalog>/<schema>/<volume>/<path>/data/train"
  val_data_path: "/Volumes/<catalog>/<schema>/<volume>/<path>/data/val"
  test_data_path: "/Volumes/<catalog>/<schema>/<volume>/<path>/data/test"
  
  # Data loading parameters
  batch_size: 32
  num_workers: 4
  model_name: "microsoft/resnet-50"  # For adapter initialization
  
  # Image processing
  image_size: [224, 224]  # ResNet default size
  normalize_mean: [0.485, 0.456, 0.406]
  normalize_std: [0.229, 0.224, 0.225]
  
  # Augmentation
  augment: true
  augmentations:
    horizontal_flip: true
    vertical_flip: false
    rotation: 15
    color_jitter:
      brightness: 0.2
      contrast: 0.2
      saturation: 0.2
      hue: 0.1
    random_crop: true
    random_resize: [0.8, 1.2]

# Training Configuration
training:
  # Basic training parameters
  max_epochs: 100
  
  # Learning rate and optimization
  learning_rate: 1e-4
  weight_decay: 1e-4
  scheduler: "cosine"
  scheduler_params:
    T_max: 100
    eta_min: 1e-6
  
  # Early stopping
  early_stopping_patience: 10
  monitor_metric: "val_loss"
  monitor_mode: "min"
  
  # Checkpointing
  checkpoint_dir: "/Volumes/<catalog>/<schema>/<volume>/<path>/checkpoints/classification"
  save_top_k: 3
  
  # Logging
  log_every_n_steps: 50
  
  # Distributed training
  distributed: false
  use_gpu: true
  resources_per_worker:
    CPU: 2
    GPU: 1

# MLflow Configuration
mlflow:
  experiment_name: "classification_training"
  run_name: "resnet50"
  log_model: true
  tags:
    framework: "lightning"
    model: "resnet"
    dataset: "imagenet"

# Output Configuration
output:
  results_dir: "/Volumes/<catalog>/<schema>/<volume>/<path>/results/classification"
  save_predictions: true
  visualization:
    save_images: true
    max_images: 10 